{"version":3,"sources":["components/Navigation/Navigation.module.css","components/ContactList/ContactList.module.css","views/css/RegistrationView.module.css","components/ContactForm/ContactForm.module.css","App.module.css","components/Filter/Filter.module.css","views/css/HomeView.module.css","redux/auth/auth-selectors.js","redux/auth/auth-actions.js","redux/auth/auth-operations.js","components/UserMenu/UserMenu.js","components/Navigation/MainNavigation.js","components/Navigation/AuthNavigation.js","components/AppBar/AppBar.js","views/HomeView.js","views/LoginView.js","views/RegistrationView.js","views/NotFoundView.js","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-operations.js","components/ContactForm/ContactForm.js","redux/phonebook/phonebook-selectors.js","components/Filter/Filter.js","components/ContactList/ContactList.js","views/PhonebookView.js","components/Routes/PrivateRoute.js","components/Routes/PublicRoute.js","App.js","redux/phonebook/phonebook-reducer.js","redux/auth/auth-reducer.js","redux/store.js","index.js"],"names":["module","exports","authSelectors","getIsAuthenticated","state","auth","IsAuthenticated","getUserName","user","name","getAuthError","error","getAuthLoading","loading","authActions","registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getUserRequest","getUserSuccess","getUserError","axios","defaults","baseURL","token","headers","common","Authorization","authOperations","register","credentials","dispatch","a","post","response","data","massage","login","logout","getCurrentUser","getState","persistedToken","get","message","connect","userName","onLogOut","type","onClick","isAuthenticated","exact","to","className","styles","link","activeClassName","activeLink","AuthNavigation","logo","role","aria-label","HomeView","img","LoginView","email","password","onEmailChange","e","setState","currentTarget","value","onPasswordChange","handleSubmit","preventDefault","props","onLogin","onSubmit","this","onChange","Component","RegistrationView","onNameChange","onRegister","alert","notify","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","form","autoComplete","htmlFor","nameInputId","id","input","Button","button","variant","newestOnTop","rtl","pauseOnFocusLoss","errorReg","NotFoundView","actions","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","updateContactRequest","updateContactSuccess","updateContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","Axios","operations","fetchContacts","addContact","text","contact","number","then","catch","deleteContact","contactId","delete","ContactForm","onNumberChange","s","containerForm","formInput","btnForm","phonebookOperations","getAllContacts","contacts","items","getFilter","filter","selectors","getVisibleContacts","createSelector","normolizedFilter","toLowerCase","includes","contactsSelectors","onChangeFilter","filterLabel","filterInput","onDeleteContact","onUpdateContact","listOfContact","map","itemOfListContact","itemNameContact","itemNumberContact","btnOfListContact","containerPhonebook","marginLeft","PhonebookView","componentDidMount","style","component","redirectTo","routeProps","render","restricted","App","onGetCurrentUser","container","path","createReducer","_","payload","find","combineReducers","initialState","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","phonebookReducer","persistor","persistStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e4391fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__1UOgi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listOfContact\":\"ContactList_listOfContact__1lVwF\",\"itemOfListContact\":\"ContactList_itemOfListContact__LasZ9\",\"itemNameContact\":\"ContactList_itemNameContact__Xr_08\",\"itemNumberContact\":\"ContactList_itemNumberContact__38Fpg\",\"btnOfListContact\":\"ContactList_btnOfListContact__3ZMZS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"RegistrationView_logo__1x3hi\",\"form\":\"RegistrationView_form__Mzsxe\",\"input\":\"RegistrationView_input__Ql9rD\",\"button\":\"RegistrationView_button__RKUXx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerForm\":\"ContactForm_containerForm__31RSz\",\"formInput\":\"ContactForm_formInput__3Y37D\",\"btnForm\":\"ContactForm_btnForm___xBWw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__20xxZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__2SQCq\",\"filterLabel\":\"Filter_filterLabel__1aWHD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"HomeView_img__3F7Wm\"};","const getIsAuthenticated = state => state.auth.IsAuthenticated;\r\n\r\nconst getUserName = state => state.auth.user.name;\r\n\r\nconst getAuthError = state => state.auth.error;\r\n\r\nconst getAuthLoading = state => state.auth.loading;\r\n\r\nconst authSelectors = {\r\n  getIsAuthenticated,\r\n  getUserName,\r\n  getAuthError,\r\n  getAuthLoading,\r\n};\r\n\r\nexport default authSelectors;","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getUserRequest = createAction('auth/getUserRequest');\r\nconst getUserSuccess = createAction('auth/getUserSuccess');\r\nconst getUserError = createAction('auth/getUserError');\r\n\r\nconst authActions = {registerRequest, registerSuccess, registerError, loginRequest, loginSuccess, loginError, logoutRequest, logoutSuccess, logoutError, getUserRequest, getUserSuccess, getUserError}\r\nexport default authActions;\r\n","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\n\r\n// axios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com/';\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/';\r\n\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = '';\r\n    },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n    dispatch(authActions.registerRequest());\r\n\r\n    try {\r\n        const response = await axios.post('/users/signup', credentials);\r\n        token.set(response.data.token);\r\n        dispatch(authActions.registerSuccess(response.data));\r\n    } catch (error) {\r\n        dispatch(authActions.registerError(error.massage));\r\n    }\r\n};\r\n\r\nconst login = user => async dispatch => {\r\n    dispatch(authActions.loginRequest());\r\n    try {\r\n        const response = await axios.post('/users/login', user);\r\n        token.set(response.data.token);\r\n        dispatch(authActions.loginSuccess(response.data));\r\n    } catch (error) {\r\n        dispatch(authActions.loginError(error.massage));\r\n    }\r\n};\r\n\r\nconst logout = () => async dispatch => {\r\n    dispatch(authActions.logoutRequest());\r\n    try {\r\n        await axios.post('/users/logout');\r\n        token.unset();\r\n        dispatch(authActions.logoutSuccess());\r\n    } catch (error) {\r\n        dispatch(authActions.logoutError(error.massage));\r\n    }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n    const {\r\n        auth: { token: persistedToken },\r\n    } = getState();\r\n    if (!persistedToken) {\r\n        return;\r\n    }\r\n    token.set(persistedToken);\r\n    dispatch(authActions.getUserRequest());\r\n    try {\r\n        const response = await axios.get('/users/current');\r\n        dispatch(authActions.getUserSuccess(response.data))\r\n    } catch (error) {\r\n        dispatch(authActions.getUserError(error.message))\r\n    }\r\n}\r\n\r\nconst authOperations = { register, login, logout, getCurrentUser};\r\nexport default authOperations;","import s from './UserMenu.module.css';\r\nimport { connect } from 'react-redux';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\nimport authOperations from '../../redux/auth/auth-operations';\r\n\r\nconst UserMenu = ({ userName, onLogOut }) => {\r\n    return (\r\n        <>\r\n            <p>Добро пожаловать, {userName}</p>\r\n            <button type='button' onClick={onLogOut} >Выйти</button>\r\n        </>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    userName: authSelectors.getUserName(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onLogOut: () => dispatch(authOperations.logout())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\nimport styles from './Navigation.module.css';\r\n\r\nconst MainNavigation = ({isAuthenticated}) => (\r\n  <div>\r\n    <nav>\r\n      <NavLink\r\n        exact\r\n        to=\"/\"\r\n        className={styles.link}\r\n        activeClassName={styles.activeLink}\r\n      >\r\n        Главная\r\n      </NavLink>\r\n\r\n      {isAuthenticated && <NavLink\r\n        to=\"/contacts\"\r\n        className={styles.link}\r\n        activeClassName={styles.activeLink}\r\n      >\r\n        Телефонная книга\r\n      </NavLink>}\r\n      \r\n    </nav>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state)\r\n})\r\n\r\nexport default connect(mapStateToProps)(MainNavigation);","import { NavLink } from 'react-router-dom';\r\nimport styles from './Navigation.module.css';\r\n\r\nconst AuthNavigation = () => (\r\n  <div>\r\n    <nav>\r\n      <NavLink\r\n        to=\"/register\"\r\n        className={styles.link}\r\n        activeClassName={styles.activeLink}\r\n      >\r\n          Регистрация\r\n      </NavLink>\r\n          <NavLink\r\n        to=\"/login\"\r\n        className={styles.link}\r\n        activeClassName={styles.activeLink}\r\n      >\r\n        Вход\r\n      </NavLink>\r\n    </nav>\r\n  </div>\r\n);\r\n\r\nexport default AuthNavigation;","import UserMenu from '../UserMenu/UserMenu';\r\nimport MainNavigation from '../Navigation/MainNavigation';\r\nimport AuthNavigation from '../Navigation/AuthNavigation';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\nimport { connect } from 'react-redux';\r\nimport styles from './AppBar.module.css';\r\n\r\nconst AppBar = ({ isAuthenticated }) => {\r\n    return (\r\n        <header>\r\n            <span className={styles.logo} role=\"icon\" aria-label=\"logo\"></span>\r\n            <MainNavigation />\r\n            {isAuthenticated ? <UserMenu /> : <AuthNavigation />}\r\n            <hr />\r\n        </header>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state)\r\n})\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n\r\n\r\n","\r\nimport styles from './css/HomeView.module.css';\r\n\r\nconst HomeView = () => {\r\n    return (\r\n        <>\r\n        <div className={styles.img}></div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default HomeView;","import { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport authOperations from '../redux/auth/auth-operations';\r\n\r\nclass LoginView extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    onEmailChange = e => {\r\n        this.setState({ email: e.currentTarget.value})\r\n    }\r\n\r\n    onPasswordChange = e => {\r\n        this.setState({ password: e.currentTarget.value})\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (this.state.email && this.state.password !== '') {\r\n            this.props.onLogin(this.state);\r\n            this.setState({ email: '', password: '' });\r\n            return;\r\n        } \r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <h2>Вход</h2>\r\n                    <label>Адрес почты</label>\r\n                    <input\r\n                        \r\n                        type=\"text\"\r\n                        onChange={this.onEmailChange}\r\n                        value={this.state.email}\r\n                    />\r\n                    <label>Пароль</label>\r\n                    <input\r\n                        \r\n                        type=\"text\"\r\n                        onChange={this.onPasswordChange}\r\n                        value={this.state.password}\r\n                    />\r\n                    <button type=\"submit\">Войти</button>\r\n                </form>\r\n            </>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n onLogin: (data) => dispatch(authOperations.login(data))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginView);","import { Component } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { connect } from 'react-redux';\r\nimport authOperations from '../redux/auth/auth-operations';\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\nimport styles from './css/RegistrationView.module.css';\r\n\r\nclass RegistrationView extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    onNameChange = e => {\r\n        this.setState({ name: e.currentTarget.value})\r\n    }\r\n\r\n    onEmailChange = e => {\r\n        this.setState({ email: e.currentTarget.value})\r\n    }\r\n\r\n    onPasswordChange = e => {\r\n        this.setState({ password: e.currentTarget.value})\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (this.state.email && this.state.password !== '') {\r\n        this.props.onRegister(this.state);\r\n        this.setState({ name: '', email: '', password: ''});\r\n        return\r\n        }\r\n        else {\r\n            this.setState({ alert: true})\r\n        }\r\n    };\r\n\r\n    notify = () => toast.error('🦄 Wow so easy!', {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n    });\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <form className={styles.form} onSubmit={this.handleSubmit} autoComplete='off'>\r\n                    <h2>Регистрация нового пользователя</h2>\r\n                    <label htmlFor={this.nameInputId}>Имя</label>\r\n                    <input\r\n                        name='name'\r\n                        id={this.nameInputId}\r\n                        className={styles.input}\r\n                        type=\"text\"\r\n                        onChange={this.onNameChange}\r\n                        value={this.state.name}\r\n                    />\r\n                    <label>Адрес почты</label>\r\n                    <input\r\n                        name='email'\r\n                        className={styles.input}\r\n                        type=\"text\"\r\n                        onChange={this.onEmailChange}\r\n                        value={this.state.email}\r\n                    />\r\n                    <label>Пароль</label>\r\n                    <input\r\n                        name='password'\r\n                        className={styles.input}\r\n                        type=\"text\"\r\n                        onChange={this.onPasswordChange}\r\n                        value={this.state.password}\r\n                    />\r\n                    <Button className={styles.button} variant=\"primary\" type=\"submit\">Отправить</Button>\r\n                    {this.state.alert &&\r\n                        <ToastContainer\r\n                        position=\"top-right\"\r\n                        autoClose={5000}\r\n                        hideProgressBar={false}\r\n                        newestOnTop={false}\r\n                        closeOnClick\r\n                        rtl={false}\r\n                        pauseOnFocusLoss\r\n                        draggable\r\n                        pauseOnHover\r\n                        />}\r\n                </form>\r\n            </>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    // isLoadingAuth: authSelectors.getAuthLoading(state),\r\n    errorReg: authSelectors.getAuthError(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onRegister: (data) => dispatch(authOperations.register(data))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationView);\r\n","const NotFoundView = () => {\r\n    return (\r\n        <>\r\n            <h1>404 - Страница не найдена</h1>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NotFoundView;","import { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nconst fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nconst fetchContactsError = createAction('contacts/fetchContactsError');\n\nconst addContactRequest = createAction('contacts/addContactRequest');\nconst addContactSuccess = createAction('contacts/addContactSuccess');\nconst addContactError = createAction('contacts/addContactError');\n\nconst updateContactRequest = createAction('contacts/updateContactRequest');\nconst updateContactSuccess = createAction('contacts/updateContactSuccess');\nconst updateContactError = createAction('contacts/updateContactError');\n\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nconst deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n\nconst actions = { fetchContactsRequest, fetchContactsSuccess, fetchContactsError, addContactRequest, addContactSuccess, addContactError, updateContactRequest, updateContactSuccess, updateContactError, deleteContactRequest, deleteContactSuccess, deleteContactError, changeFilter };\nexport default actions;","import Axios from 'axios';\r\n// import shortid from 'shortid';\r\n\r\nimport actions from './phonebook-actions';\r\n\r\n// Axios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com/';\r\nAxios.defaults.baseURL = 'https://connections-api.herokuapp.com/'; \r\n\r\nconst fetchContacts = () => async dispatch => {\r\n    dispatch(actions.fetchContactsRequest());\r\n    try {\r\n        const { data } = await Axios.get('/contacts');\r\n        dispatch(actions.fetchContactsSuccess(data))\r\n    } catch (error) {\r\n        dispatch(actions.fetchContactsError(error.message))\r\n    }\r\n};\r\n\r\nconst addContact = text => dispatch => {\r\n    dispatch(actions.addContactRequest());\r\n    const contact = {\r\n        name: text.name,\r\n        number: text.number,\r\n    };\r\n    \r\n    Axios\r\n        .post('/contacts', contact)\r\n        .then(({ data }) => dispatch(actions.addContactSuccess(data)))\r\n        .catch(({ error }) => dispatch(actions.addContactError(error.message)));\r\n};\r\n\r\n// const updateContact = contact => dispatch => {\r\n//     dispatch(actions.updateContactRequest());\r\n    \r\n//     Axios\r\n//         .post(`/contacts/${contact.id}`, contact)\r\n//         .then(({ data }) => dispatch(actions.updateContactSuccess(data)))\r\n//         .catch(({ error }) => dispatch(actions.updateContactError(error.message)));\r\n// };\r\n\r\nconst deleteContact = contactId => dispatch => {\r\n    dispatch(actions.deleteContactRequest());\r\n    \r\n    Axios\r\n        .delete(`/contacts/${contactId}`)\r\n        .then(() => dispatch(actions.deleteContactSuccess(contactId)))\r\n        .catch(({ error }) => dispatch(actions.deleteContactError(error.message)));\r\n};\r\n\r\nconst operations = { fetchContacts, addContact, deleteContact };\r\n\r\nexport default operations;","import { Component } from 'react';\nimport s from './ContactForm.module.css';\nimport { connect } from 'react-redux';\nimport phonebookOperations from '../../redux/phonebook/phonebook-operations';\n\nclass ContactForm extends Component {\n  state = {\n    id: '',\n    name: '',\n    number: '',\n  };\n\n  onNameChange = e => {\n    this.setState({ name: e.currentTarget.value });\n  };\n\n  onNumberChange = e => {\n    this.setState({ number: e.currentTarget.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.state.number !== '') {\n      this.props.onSubmit(this.state);\n      this.setState({ name: '', number: '' });\n      return;\n    }\n    alert('Заполните данные контакта!');\n  };\n\n  render() {\n    return (\n      <form className={s.containerForm} onSubmit={this.handleSubmit}>\n        <label>\n          <p>Имя</p>\n          <input\n            className={s.formInput}\n            type=\"text\"\n            onChange={this.onNameChange}\n            value={this.state.name}\n          />\n        </label>\n        <label>\n          <p>Номер</p>\n          <input\n            className={s.formInput}\n            type=\"text\"\n            onChange={this.onNumberChange}\n            value={this.state.number}\n          />\n        </label>\n        <button className={s.btnForm} type=\"submit\">\n          Добавить контакт\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: ({ id, name, number }) =>\n    dispatch(phonebookOperations.addContact({ id, name, number })),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import { createSelector } from '@reduxjs/toolkit';\r\n    \r\nconst getAllContacts = state => state.contacts.items;\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getVisibleContacts = createSelector(\r\n    [getAllContacts, getFilter],\r\n    (contacts, filter) => {\r\n        const normolizedFilter = filter.toLowerCase();\r\n        return contacts.filter(contact =>\r\n            contact.name.toLowerCase().includes(normolizedFilter),\r\n        );\r\n    }\r\n);\r\n\r\nconst selectors = {getAllContacts, getFilter, getVisibleContacts}\r\n\r\nexport default selectors;","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/phonebook/phonebook-actions';\nimport contactsSelectors from '../../redux/phonebook/phonebook-selectors';\n\n\nconst Filter = ({ value = '', onChangeFilter }) => {\n  return (\n    <>\n      <label className={s.filterLabel}>\n        Фильтр контактов по имени\n        <input\n          className={s.filterInput}\n          type=\"text\"\n          value={value}\n          onChange={onChangeFilter}\n        />\n      </label>\n    </>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n};\n\nconst mapStateToProps = state => ({\n  value: contactsSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChangeFilter: e =>\n    dispatch(actions.changeFilter(e.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nimport { connect } from 'react-redux';\nimport phonebookOperations from '../../redux/phonebook/phonebook-operations';\nimport contactsSelectors from '../../redux/phonebook/phonebook-selectors';\n\nfunction ContactList({ contacts = [], onUpdateContact, onDeleteContact }) {\n  return (\n    <>\n      <ul className={s.listOfContact}>\n        {contacts.map(contact => (\n          <li key={contact.id} className={s.itemOfListContact}>\n            <p className={s.itemNameContact}>{contact.name} </p>\n            <p className={s.itemNumberContact}>{contact.number}</p>\n            <button\n              className={s.btnOfListContact}\n              type=\"button\"\n              onClick={() => onUpdateContact(contact.id)}\n            >\n              Изменить\n            </button>\n            <button\n              className={s.btnOfListContact}\n              type=\"button\"\n              onClick={() => onDeleteContact(contact.id)}\n            >\n              Удалить\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n};\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: contactId =>\n    dispatch(phonebookOperations.deleteContact(contactId)),\n  onUpdateContact: contactId =>\n    dispatch(phonebookOperations.deleteContact(contactId)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport phonebookOperations from '../redux/phonebook/phonebook-operations';\r\n// import phonebookSelectors from '../redux/phonebook/phonebook-selectors';\r\nimport ContactForm from '../components/ContactForm/ContactForm';\r\nimport Filter from '../components/Filter/Filter';\r\nimport ContactList from '../components/ContactList/ContactList';\r\n\r\n\r\nconst containerPhonebook = {\r\n  marginLeft: \"10px\"\r\n}\r\n\r\nclass PhonebookView extends Component {\r\n  componentDidMount = () => {\r\n    this.props.fetchContacts()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={containerPhonebook}>\r\n        <h1>Телефонная книга</h1>\r\n        <ContactForm />\r\n        <h2>Контакты</h2>\r\n        <Filter />\r\n        <ContactList />\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\n// const mapStateToProps = state => ({\r\n//   contacts: phonebookSelectors.getAllContacts(state)\r\n// });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContacts: () => dispatch(phonebookOperations.fetchContacts())\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(PhonebookView);","import { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\n\r\nconst PrivateRoute = ({\r\n    component: Component,\r\n    isAuthenticated,\r\n    redirectTo,\r\n    ...routeProps\r\n}) => (\r\n    <Route {...routeProps} render={\r\n        props => isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    } />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\n\r\nconst PublicRoute = ({\r\n    component: Component,\r\n    isAuthenticated,\r\n    redirectTo,\r\n    ...routeProps\r\n}) => (\r\n    <Route {...routeProps} render={\r\n        props => isAuthenticated && routeProps.restricted ? (<Redirect to={redirectTo} />) : (<Component {...props}/>)\r\n    } />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);","import './App.css';\nimport s from './App.module.css';\nimport { Component, Suspense, lazy } from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\nimport AppBar from './components/AppBar/AppBar';\nimport HomeView from './views/HomeView';\nimport LoginView from './views/LoginView';\nimport RegistrationView from './views/RegistrationView';\nimport NotFoundView from './views/NotFoundView';\nimport PhonebookView from './views/PhonebookView';\nimport PrivateRoute from './components/Routes/PrivateRoute';\nimport PublicRoute from './components/Routes/PublicRoute';\nimport authOperations from './redux/auth/auth-operations';\nimport styles from './App.module.css';\n\n// const PhonebookView = lazy(() => import('./views/PhonebookView'));\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.onGetCurrentUser();\n    }\n    render() {\n        return(\n        <div className={styles.container}>\n            <AppBar />\n                <Switch>\n                    <PublicRoute exact path=\"/\" component={HomeView} />\n                    <PublicRoute path=\"/register\" restricted redirectTo=\"/\" component={RegistrationView} />\n                    <PublicRoute path=\"/login\" restricted redirectTo=\"/contacts\" component={LoginView} />\n                    <PrivateRoute path=\"/contacts\" redirectTo=\"/login\" component={PhonebookView}/>\n                    <PublicRoute component={NotFoundView} />\n                </Switch>\n        </div>\n        )\n    }\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onGetCurrentUser: () => dispatch(authOperations.getCurrentUser()),\n});\n\nexport default connect(null, mapDispatchToProps)(App);\n// export default App;\n\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport actions from './phonebook-actions';\n\nconst items = createReducer([], {\n  [actions.fetchContactsSuccess]: (_, {payload}) => payload,\n  [actions.addContactSuccess]: (state, { payload }) => {\n    if (\n      state.find(contact =>\n        contact.name.toLowerCase().includes(payload.name.toLowerCase()),\n      )\n    ) {\n      alert(`${payload.name} is already in contacts`);\n    } else {\n      return [payload, ...state];\n    }\n  },\n  // [actions.updateContactSuccess]: (state, { payload }) => {\n  //   return [payload, ...state];\n  // },\n  [actions.deleteContactSuccess]: (state, { payload }) => {\n    return state.filter(contact => payload !== contact.id);\n  },\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n  [actions.deleteContactSuccess]: (state, { payload }) => '',\n});\n\nconst error = createReducer('', {\n  [actions.fetchContactsError]: (state, { payload }) => payload,\n  [actions.addContactError]: (state, { payload }) => payload,\n  [actions.deleteContactError]: (state, { payload }) => payload,\n})\n\nexport default combineReducers({\n  items,\n  filter,\n  error\n});\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialState = { name: \"\", email: \"\" };\r\n\r\nconst user = createReducer(initialState, {\r\n    [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n    [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n    [authActions.logoutSuccess]: () => initialState,\r\n    [authActions.getUserSuccess]: (_, {payload}) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n    [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n    [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n    [authActions.logoutSuccess]: () => null\r\n});\r\n\r\nconst error = createReducer(null, {\r\n    [authActions.registerError]: (_, { payload }) => payload,\r\n    [authActions.loginError]: (_, { payload }) => payload,\r\n    [authActions.logoutError]: (_, { payload }) => payload,\r\n    [authActions.getUserError]: (_, { payload }) => payload\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n    [authActions.registerSuccess]: () => true,\r\n    [authActions.loginSuccess]: () => true,\r\n    [authActions.getUserSuccess]: () => true,\r\n    [authActions.registerError]: () => false,\r\n    [authActions.loginError]: () => false,\r\n    [authActions.getUserError]: () => false,\r\n    [authActions.logoutSuccess]: () => false\r\n});\r\n\r\nexport default combineReducers({\r\n    user,\r\n    isAuthenticated,\r\n    token,\r\n    error\r\n});\r\n\r\n// user: {\r\n//       name: 'Tatiana',\r\n//       email: 'my.mail.tetiana@gmail.com'\r\n//     },","import {\n  configureStore,\n  combineReducers,\n  getDefaultMiddleware,\n} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport phonebookReducer from './phonebook/phonebook-reducer';\nimport authReducer from './auth/auth-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: 'token',\n  storage,\n  whitelist: ['token']\n}\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: phonebookReducer,\n  },\n  middleware,\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}