{"version":3,"sources":["views/css/LoginView.module.css","views/LoginView.js"],"names":["module","exports","LoginView","state","email","password","onEmailChange","e","setState","currentTarget","value","onPasswordChange","handleSubmit","preventDefault","toast","error","length","props","onLogin","className","styles","form","onSubmit","this","input","type","onChange","button","variant","Component","connect","dispatch","data","authOperations","login"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,KAAO,wBAAwB,MAAQ,yBAAyB,OAAS,4B,mJCOrFC,E,4MACFC,MAAQ,CACJC,MAAO,GACPC,SAAU,I,EAGdC,cAAgB,SAAAC,GACZ,EAAKC,SAAS,CAAEJ,MAAOG,EAAEE,cAAcC,S,EAG3CC,iBAAmB,SAAAJ,GACf,EAAKC,SAAS,CAAEH,SAAUE,EAAEE,cAAcC,S,EAG9CE,aAAe,SAAAL,GAIT,GAHFA,EAAEM,iBACuB,KAArB,EAAKV,MAAMC,OACXU,IAAMC,MAAM,kKACV,EAAKZ,MAAME,SAASW,OAAS,GAK/B,OAFA,EAAKC,MAAMC,QAAQ,EAAKf,YACxB,EAAKK,SAAS,CAAEJ,MAAO,GAAIC,SAAU,KAHrCS,IAAMC,MAAM,kH,4CAQpB,WACI,OACI,mCACI,uBAAMI,UAAWC,IAAOC,KAAMC,SAAUC,KAAKX,aAA7C,UACI,0DACA,kGACA,uBACIO,UAAWC,IAAOI,MAClBC,KAAK,OACLC,SAAUH,KAAKjB,cACfI,MAAOa,KAAKpB,MAAMC,QAEtB,yEACA,uBACIe,UAAWC,IAAOI,MAClBC,KAAK,OACLC,SAAUH,KAAKZ,iBACfD,MAAOa,KAAKpB,MAAME,WAEtB,cAAC,IAAD,IACA,cAAC,IAAD,CAAQc,UAAWC,IAAOO,OAAQC,QAAQ,UAAUH,KAAK,SAAzD,qD,GA/CII,aA0DTC,sBAAQ,MAJI,SAAAC,GAAQ,MAAK,CACvCb,QAAS,SAACc,GAAD,OAAUD,EAASE,IAAeC,MAAMF,QAGnCF,CAAkC5B","file":"static/js/6.a0deeec3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginView_form__3nTY4\",\"input\":\"LoginView_input__3qagK\",\"button\":\"LoginView_button__3XILO\"};","import { Component } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport authOperations from '../redux/auth/auth-operations';\r\nimport styles from './css/LoginView.module.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass LoginView extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    onEmailChange = e => {\r\n        this.setState({ email: e.currentTarget.value})\r\n    }\r\n\r\n    onPasswordChange = e => {\r\n        this.setState({ password: e.currentTarget.value})\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (this.state.email === '') { \r\n            toast.error('Поле \"Адрес почты\" не заполнено'); \r\n        } if (this.state.password.length < 7) { \r\n            toast.error('Неправильный пароль'); \r\n        } else {\r\n            this.props.onLogin(this.state);\r\n            this.setState({ email: '', password: '' });\r\n            return;\r\n        };\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <form className={styles.form} onSubmit={this.handleSubmit}>\r\n                    <h2>Вход</h2>\r\n                    <label>Адрес почты</label>\r\n                    <input\r\n                        className={styles.input}\r\n                        type=\"text\"\r\n                        onChange={this.onEmailChange}\r\n                        value={this.state.email}\r\n                    />\r\n                    <label>Пароль</label>\r\n                    <input\r\n                        className={styles.input}\r\n                        type=\"text\"\r\n                        onChange={this.onPasswordChange}\r\n                        value={this.state.password}\r\n                    />\r\n                    <ToastContainer />\r\n                    <Button className={styles.button} variant=\"primary\" type=\"submit\">Войти</Button>\r\n                </form>\r\n            </>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n onLogin: (data) => dispatch(authOperations.login(data))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginView);"],"sourceRoot":""}