{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","redux/phonebook/phonebook-operations.js","components/ContactForm/ContactForm.js","redux/phonebook/phonebook-selectors.js","components/Filter/Filter.js","components/ContactList/ContactList.js","views/PhonebookView.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","Axios","defaults","baseURL","operations","fetchContacts","dispatch","a","actions","fetchContactsRequest","get","data","fetchContactsSuccess","fetchContactsError","message","addContact","text","addContactRequest","contact","name","number","post","then","addContactSuccess","catch","error","addContactError","deleteContact","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","ContactForm","state","id","onNameChange","e","setState","currentTarget","value","onNumberChange","handleSubmit","preventDefault","props","onSubmit","alert","className","s","containerForm","this","formInput","type","onChange","btnForm","Component","connect","phonebookOperations","getAllContacts","contacts","items","getFilter","filter","selectors","getVisibleContacts","createSelector","normolizedFilter","toLowerCase","includes","contactsSelectors","onChangeFilter","changeFilter","filterLabel","filterInput","onDeleteContact","onUpdateContact","listOfContact","map","itemOfListContact","itemNameContact","itemNumberContact","btnOfListContact","onClick","containerPhonebook","marginLeft","PhonebookView","componentDidMount","style"],"mappings":"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","file":"static/js/4.4a29ba41.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__2SQCq\",\"filterLabel\":\"Filter_filterLabel__1aWHD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listOfContact\":\"ContactList_listOfContact__1lVwF\",\"itemOfListContact\":\"ContactList_itemOfListContact__LasZ9\",\"itemNameContact\":\"ContactList_itemNameContact__Xr_08\",\"itemNumberContact\":\"ContactList_itemNumberContact__38Fpg\",\"btnOfListContact\":\"ContactList_btnOfListContact__3ZMZS\"};","import Axios from 'axios';\r\nimport actions from './phonebook-actions';\r\n\r\nAxios.defaults.baseURL = 'https://connections-api.herokuapp.com/'; \r\n\r\nconst fetchContacts = () => async dispatch => {\r\n    dispatch(actions.fetchContactsRequest());\r\n    try {\r\n        const { data } = await Axios.get('/contacts');\r\n        dispatch(actions.fetchContactsSuccess(data))\r\n    } catch (error) {\r\n        dispatch(actions.fetchContactsError(error.message))\r\n    }\r\n};\r\n\r\nconst addContact = text => dispatch => {\r\n    dispatch(actions.addContactRequest());\r\n    const contact = {\r\n        name: text.name,\r\n        number: text.number,\r\n    };\r\n    \r\n    Axios\r\n        .post('/contacts', contact)\r\n        .then(({ data }) => dispatch(actions.addContactSuccess(data)))\r\n        .catch(({ error }) => dispatch(actions.addContactError(error.message)));\r\n};\r\n\r\n// const updateContact = contact => dispatch => {\r\n//     dispatch(actions.updateContactRequest());\r\n    \r\n//     Axios\r\n//         .post(`/contacts/${contact.id}`, contact)\r\n//         .then(({ data }) => dispatch(actions.updateContactSuccess(data)))\r\n//         .catch(({ error }) => dispatch(actions.updateContactError(error.message)));\r\n// };\r\n\r\nconst deleteContact = contactId => dispatch => {\r\n    dispatch(actions.deleteContactRequest());\r\n    \r\n    Axios\r\n        .delete(`/contacts/${contactId}`)\r\n        .then(() => dispatch(actions.deleteContactSuccess(contactId)))\r\n        .catch(({ error }) => dispatch(actions.deleteContactError(error.message)));\r\n};\r\n\r\nconst operations = { fetchContacts, addContact, deleteContact };\r\n\r\nexport default operations;","import { Component } from 'react';\nimport s from './ContactForm.module.css';\nimport { connect } from 'react-redux';\nimport phonebookOperations from '../../redux/phonebook/phonebook-operations';\n\nclass ContactForm extends Component {\n  state = {\n    id: '',\n    name: '',\n    number: '',\n  };\n\n  onNameChange = e => {\n    this.setState({ name: e.currentTarget.value });\n  };\n\n  onNumberChange = e => {\n    this.setState({ number: e.currentTarget.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.state.number !== '') {\n      this.props.onSubmit(this.state);\n      this.setState({ name: '', number: '' });\n      return;\n    }\n    alert('Заполните данные контакта!');\n  };\n\n  render() {\n    return (\n      <form className={s.containerForm} onSubmit={this.handleSubmit}>\n        <label>\n          <p>Имя</p>\n          <input\n            className={s.formInput}\n            type=\"text\"\n            onChange={this.onNameChange}\n            value={this.state.name}\n          />\n        </label>\n        <label>\n          <p>Номер</p>\n          <input\n            className={s.formInput}\n            type=\"text\"\n            onChange={this.onNumberChange}\n            value={this.state.number}\n          />\n        </label>\n        <button className={s.btnForm} type=\"submit\">\n          Добавить контакт\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: ({ id, name, number }) =>\n    dispatch(phonebookOperations.addContact({ id, name, number })),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import { createSelector } from '@reduxjs/toolkit';\r\n    \r\nconst getAllContacts = state => state.contacts.items;\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getVisibleContacts = createSelector(\r\n    [getAllContacts, getFilter],\r\n    (contacts, filter) => {\r\n        const normolizedFilter = filter.toLowerCase();\r\n        return contacts.filter(contact =>\r\n            contact.name.toLowerCase().includes(normolizedFilter),\r\n        );\r\n    }\r\n);\r\n\r\nconst selectors = {getAllContacts, getFilter, getVisibleContacts}\r\n\r\nexport default selectors;","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/phonebook/phonebook-actions';\nimport contactsSelectors from '../../redux/phonebook/phonebook-selectors';\n\n\nconst Filter = ({ value = '', onChangeFilter }) => {\n  return (\n    <>\n      <label className={s.filterLabel}>\n        Фильтр контактов по имени\n        <input\n          className={s.filterInput}\n          type=\"text\"\n          value={value}\n          onChange={onChangeFilter}\n        />\n      </label>\n    </>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n};\n\nconst mapStateToProps = state => ({\n  value: contactsSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChangeFilter: e =>\n    dispatch(actions.changeFilter(e.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nimport { connect } from 'react-redux';\nimport phonebookOperations from '../../redux/phonebook/phonebook-operations';\nimport contactsSelectors from '../../redux/phonebook/phonebook-selectors';\n\nfunction ContactList({ contacts = [], onUpdateContact, onDeleteContact }) {\n  return (\n    <>\n      <ul className={s.listOfContact}>\n        {contacts.map(contact => (\n          <li key={contact.id} className={s.itemOfListContact}>\n            <p className={s.itemNameContact}>{contact.name} </p>\n            <p className={s.itemNumberContact}>{contact.number}</p>\n            <button\n              className={s.btnOfListContact}\n              type=\"button\"\n              onClick={() => onUpdateContact(contact.id)}\n            >\n              Изменить\n            </button>\n            <button\n              className={s.btnOfListContact}\n              type=\"button\"\n              onClick={() => onDeleteContact(contact.id)}\n            >\n              Удалить\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n};\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: contactId =>\n    dispatch(phonebookOperations.deleteContact(contactId)),\n  onUpdateContact: contactId =>\n    dispatch(phonebookOperations.deleteContact(contactId)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport phonebookOperations from '../redux/phonebook/phonebook-operations';\r\n// import phonebookSelectors from '../redux/phonebook/phonebook-selectors';\r\nimport ContactForm from '../components/ContactForm/ContactForm';\r\nimport Filter from '../components/Filter/Filter';\r\nimport ContactList from '../components/ContactList/ContactList';\r\n\r\n\r\nconst containerPhonebook = {\r\n  marginLeft: \"10px\"\r\n}\r\n\r\nclass PhonebookView extends Component {\r\n  componentDidMount = () => {\r\n    this.props.fetchContacts()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={containerPhonebook}>\r\n        <h1>Телефонная книга</h1>\r\n        <ContactForm />\r\n        <h2>Контакты</h2>\r\n        <Filter />\r\n        <ContactList />\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\n// const mapStateToProps = state => ({\r\n//   contacts: phonebookSelectors.getAllContacts(state)\r\n// });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContacts: () => dispatch(phonebookOperations.fetchContacts())\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(PhonebookView);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerForm\":\"ContactForm_containerForm__31RSz\",\"formInput\":\"ContactForm_formInput__3Y37D\",\"btnForm\":\"ContactForm_btnForm___xBWw\"};"],"sourceRoot":""}